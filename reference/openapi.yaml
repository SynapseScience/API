openapi: 3.0.0
info:
  title: Synapse
  version: 2.2.3
  description: Synapse is a REST API designed to simplify and promote innovation in the realm of independent science. It leverages the standard authentication flow, making it easy to use without requiring advanced technical skills. It is designed for scientists, researchers, and especially enthusiasts who wish to launch projects without being constrained by closed platforms or limited ecosystems. We promote a participatory approach where projects are open, free, transparent, and accessible. Finally, Synapse aims to provide significant visibility to independent projects, helping them connect with the right audience or contributors.
servers:
  - url: https://synapse-api.replit.app/api/
paths:
  /token:
    get:
      summary: Get your OAuth2 token
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Your client application signature of shape app_id:app_secret" 
          schema:
            type: string
            example: "Basic my_app:5w6ldnHszcUnIe48LHX"
        - name: code
          in: query
          required: true
          description: The exchange code provided by the login page callback
          schema:
            type: string
            example: "DMhf7qJ2SkvSzQEycBw8"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: User session JSON Web Token
                    type: string
        400:
          description: Bad request
        401:
          description: Unauthorized
  /user:
    get:
      summary: Get user from username
      parameters:
        - name: username
          in: query
          required: true
          description: The desired user's Synapse username
          schema:
            type: string
            example: "johndoe213"
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
        404:
          description: User not found
        500:
          description: Internal server error
  /me:
    get:
      summary: Get authenticated user
      security:
        - oauth2:
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Your user access token from the OAuth2 authentication flow" 
          schema:
            type: string
            example: "Bearer 5w6ldnHszcUnIe48LHX5w6ldnHszcUnIe48LHX"
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
        500:
          description: Internal server error
    put:
      summary: Edit authenticated user
      security:
        - oauth2:
            - edition
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Your user access token from the OAuth2 authentication flow" 
          schema:
            type: string
            example: "Bearer 5w6ldnHszcUnIe48LHX5w6ldnHszcUnIe48LHX"
      requestBody:
        description: User data to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  description: Full or display name of the user
                pronouns:
                  type: string
                  enum:
                    - il
                    - elle
                    - iel
                  description: User's genre pronoun
                avatar:
                  type: string
                  format: uri
                  description: URL to the user's avatar
                  nullable: true
                description:
                  type: string
                  description: User's biography or description
                connections:
                  type: object
                  description: External accounts connected to the user profile
                  properties:
                    orcid:
                      type: string
                      description: ORCID identifier of the user
                    bluesky:
                      type: string
                      description: Bluesky username of the user
                    github:
                      type: string
                      description: GitHub username of the user
                    gitlab:
                      type: string
                      description: GitLab username of the user
                    hal:
                      type: string
                      description: HAL identifier of the user
                    huggingface:
                      type: string
                      description: Hugging Face username of the user
                    x:
                      type: string
                      description: X (formerly Twitter) username of the user
                    instagram:
                      type: string
                      description: Instagram username of the user
                    linkedin:
                      type: string
                      description: LinkedIn username of the user
                    reddit:
                      type: string
                      description: Reddit username of the user
                    discord:
                      type: string
                      description: Discord username and discriminator of the user
                    wechat:
                      type: string
                      description: WeChat username of the user
                    threads:
                      type: string
                      description: Threads username of the user
                    mastodon:
                      type: string
                      description: Mastodon username of the user
                    goodreads:
                      type: string
                      description: Goodreads username of the user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Sucessfully updated user
                  user:
                    $ref: '#/components/schemas/User'
        404:
          description: User not found
        500:
          description: Internal server error
  /follow:
    put:
      summary: Follow / Unfollow user
      security:
        - oauth2:
            - social
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Your user access token from the OAuth2 authentication flow" 
          schema:
            type: string
            example: "Bearer 5w6ldnHszcUnIe48LHX5w6ldnHszcUnIe48LHX"
        - name: username
          in: query
          required: true
          description: "The username of the user you want to folow" 
          schema:
            type: string
            example: "johndoe123"
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Sucessfully updated users
                  user:
                    $ref: '#/components/schemas/User'
                  userB:
                    $ref: '#/components/schemas/User'
        404:
          description: User not found
        500:
          description: Internal server error
  /like:
    put:
      summary: Like / Unlike application
      security:
        - oauth2:
            - social
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Your user access token from the OAuth2 authentication flow" 
          schema:
            type: string
            example: "Bearer 5w6ldnHszcUnIe48LHX5w6ldnHszcUnIe48LHX"
        - name: client_id
          in: query
          required: true
          description: "The client id of the application you want to like" 
          schema:
            type: string
            example: "myapplication42"
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Sucessfully updated user and application
                  user:
                    $ref: '#/components/schemas/User'
                  application:
                    $ref: '#/components/schemas/Application'
        404:
          description: Application not found
        500:
          description: Internal server error
  /applications:
    get:
      summary: Get applications list
      parameters:
        - name: limit
          in: query
          required: false
          default: 10
          description: "The number of applications to be returned [1 ; 50]" 
          schema:
            type: integer
            example: 25
        - name: offset
          in: query
          required: false
          default: 0
          description: "The pagination offset" 
          schema:
            type: integer
            example: 3
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    description: "List of applications"
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
                  pagination:
                    type: object
                    description: "Informations about pagination"
                    properties:
                      total:
                        type: integer
                        description: "The total amount of Synapse applications"
                      limit:
                        type: integer
                        description: "The limit that was used for this request"
                      offset:
                        type: integer
                        description: "The offset that was used for this request"
                      currentPage:
                        type: integer
                        description: "The page that was returned"
                      totalPages:
                        type: integer
                        description: "The total amount of pages"
        400:
          description: Bad request
        500:
          description: Internal server error
components:
  schemas:
    User:
      type: object
      description: The updated user object
      required:
        - username
        - description
        - pronouns
        - following
        - followers
        - badges
        - creation
        - starred
      properties:
        username:
          type: string
          description: Unique username of the user
        fullname:
          type: string
          description: Full name of the user
          nullable: true
        avatar:
          type: string
          format: uri
          description: URL to the user's avatar
          nullable: true
        description:
          type: string
          description: User's biography or description
        pronouns:
          type: string
          description: User's pronouns
          enum: ["il", "elle", "iel"]
        following:
          type: array
          description: List of usernames the user is following
          items:
            type: string
        followers:
          type: array
          description: List of usernames following the user
          items:
            type: string
        badges:
          type: array
          description: List of badge identifiers owned by the user
          items:
            type: string
        creation:
          type: string
          format: date-time
          description: The date when the user account was created
        starred:
          type: array
          description: List of client IDs of the projects liked by the user
          items:
            type: string
        connections:
          type: object
          description: External accounts connected to the user profile
          properties:
            orcid:
              type: string
              description: ORCID identifier of the user
            bluesky:
              type: string
              description: Bluesky username of the user
            github:
              type: string
              description: GitHub username of the user
            gitlab:
              type: string
              description: GitLab username of the user
            hal:
              type: string
              description: HAL identifier of the user
            huggingface:
              type: string
              description: Hugging Face username of the user
            x:
              type: string
              description: X (formerly Twitter) username of the user
            instagram:
              type: string
              description: Instagram username of the user
            linkedin:
              type: string
              description: LinkedIn username of the user
            reddit:
              type: string
              description: Reddit username of the user
            discord:
              type: string
              description: Discord username and discriminator of the user
            wechat:
              type: string
              description: WeChat username of the user
            threads:
              type: string
              description: Threads username of the user
            mastodon:
              type: string
              description: Mastodon username of the user
            goodreads:
              type: string
              description: Goodreads username of the user     
    Application:
      type: object
      description: The updated application object
      required:
        - client_id
        - title
        - description
        - stargazers
        - permissions
        - creation
      properties:
        client_id:
          type: string
          description: Unique identifyer of the application
        title:
          type: string
          description: Title of the application
        description:
          type: string
          description: Description of the application
        stargazers:
          type: array
          description: List of usernames that starred this application
          items:
            type: string
        creation:
          type: string
          format: date-time
          description: The date when the application was registered
        permissions:
          type: array
          description: List of the application's permissions
          items:
            type: string
  securitySchemes:
    oauth2:
      type: oauth2
      description: This API uses OAuth 2 with the authorization code grant flow.
      flows:
        authorizationCode:
          authorizationUrl: https://synapse-api.replit.app/login
          tokenUrl: https://synapse-api.replit.app/api/token
          scopes:
            edition: Edit authenticated Synapse user's public informations
            social: Follow people, star projects and interact
            economy: Manage SYN token, create tradable value